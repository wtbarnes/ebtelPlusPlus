[tox]
min_version = 4.0
envlist =
    py{311,312,313}-test
    py11-test-oldestdeps
    build_docs{,-gallery}

[testenv]
# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    oldestdeps: with the oldest supported version of key dependencies

# Pass through the following environment variables which may be needed for the CI
pass_env =
    # A variable to tell tests we are on a CI system
    CI
    # Custom compiler locations (such as ccache)
    CC
    # Location of locales (needed by sphinx on some systems)
    LOCALE_ARCHIVE
    # If the user has set a LC override we should follow it
    # (note LANG is automatically passed through by tox)
    LC_ALL

# Suppress display of matplotlib plots generated during docs build
set_env =
    MPLBACKEND = agg

# Run the tests in a temporary directory to make sure that we don't import
# the package from the source tree
changedir = .tmp/{envname}

deps =
    oldestdeps: minimum_dependencies
    pytest-cov

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test

commands_pre =
    oldestdeps: minimum_dependencies ebtelplusplus --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    pip freeze

commands =
    pytest --pyargs ebtelplusplus --cov ebtelplusplus --cov-report xml:coverage.xml --cov-report term-missing {posargs}

[testenv:build_docs{,-gallery}]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze --all --no-input
    sphinx-build \
    --color \
    -W \
    --keep-going \
    -b html \
    -d _build/.doctrees \
    . \
    _build/html \
    gallery: -D plot_gallery=1 \
    !gallery: -D plot_gallery=0 \
    {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'
